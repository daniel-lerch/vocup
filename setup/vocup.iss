; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

[Setup]
#define LongAppVersion GetFileVersion("..\src\Vocup\bin\Release\Vocup.exe")
#define AppVersion Copy(LongAppVersion, 1, RPos(".", LongAppVersion) - 1)

AppName=Vocup
AppVerName=Vocup {#AppVersion}
AppVersion={#AppVersion}
AppPublisher=Daniel Lerch
DefaultDirName={commonpf}\Vocup
DisableProgramGroupPage=yes
OutputDir=bin
SetupIconFile=setup_icon.ico

Compression=lzma2
SolidCompression=true
ShowLanguageDialog=no
AppMutex=Vocup
MinVersion=6.1.7601
DirExistsWarning=no
ChangesAssociations=yes

WizardImageFile=left.bmp
WizardSmallImageFile=top.bmp

LicenseFile=license.txt

VersionInfoVersion={#AppVersion}
VersionInfoCompany=Daniel Lerch
VersionInfoCopyright=© 2011 Florian Amstutz, © 2018-2021 Daniel Lerch

UninstallDisplayIcon={app}\Vocup.exe
UninstallDisplayName=Vocup (classic installation)

[Languages]
Name: german; MessagesFile: compiler:Languages\German.isl;

[Tasks]
Name: desktopicon; Description: {cm:CreateDesktopIcon}; GroupDescription: {cm:AdditionalIcons};

[Files]
Source: ..\src\Vocup\bin\Release\de\Vocup.resources.dll;                     DestDir: {app}\de;        Flags: ignoreversion replacesameversion;
Source: ..\src\Vocup\bin\Release\Resources\easter_egg.vhf;                   DestDir: {app}\Resources; Flags: ignoreversion replacesameversion;
Source: ..\src\Vocup\bin\Release\Resources\help.chm;                         DestDir: {app}\Resources; Flags: ignoreversion replacesameversion;
Source: ..\src\Vocup\bin\Release\CsvHelper.dll;                              DestDir: {app}; Flags: ignoreversion replacesameversion;
Source: ..\src\Vocup\bin\Release\Microsoft.Bcl.AsyncInterfaces.dll;          DestDir: {app}; Flags: ignoreversion replacesameversion;
Source: ..\src\Vocup\bin\Release\Microsoft.Bcl.HashCode.dll;                 DestDir: {app}; Flags: ignoreversion replacesameversion;
Source: ..\src\Vocup\bin\Release\Octokit.dll;                                DestDir: {app}; Flags: ignoreversion replacesameversion;
Source: ..\src\Vocup\bin\Release\PInvoke.Kernel32.dll;                       DestDir: {app}; Flags: ignoreversion replacesameversion;
Source: ..\src\Vocup\bin\Release\PInvoke.User32.dll;                         DestDir: {app}; Flags: ignoreversion replacesameversion;
Source: ..\src\Vocup\bin\Release\PInvoke.Windows.Core.dll;                   DestDir: {app}; Flags: ignoreversion replacesameversion;
Source: ..\src\Vocup\bin\Release\PInvoke.Windows.ShellScalingApi.dll;        DestDir: {app}; Flags: ignoreversion replacesameversion;
Source: ..\src\Vocup\bin\Release\System.Buffers.dll;                         DestDir: {app}; Flags: ignoreversion replacesameversion;
Source: ..\src\Vocup\bin\Release\System.Memory.dll;                          DestDir: {app}; Flags: ignoreversion replacesameversion;
Source: ..\src\Vocup\bin\Release\System.Numerics.Vectors.dll;                DestDir: {app}; Flags: ignoreversion replacesameversion;
Source: ..\src\Vocup\bin\Release\System.Runtime.CompilerServices.Unsafe.dll; DestDir: {app}; Flags: ignoreversion replacesameversion;
Source: ..\src\Vocup\bin\Release\System.Threading.Tasks.Extensions.dll;      DestDir: {app}; Flags: ignoreversion replacesameversion;
Source: ..\src\Vocup\bin\Release\System.ValueTuple.dll;                      DestDir: {app}; Flags: ignoreversion replacesameversion;
Source: ..\src\Vocup\bin\Release\Validation.dll;                             DestDir: {app}; Flags: ignoreversion replacesameversion;
Source: ..\src\Vocup\bin\Release\Vocup.exe;                                  DestDir: {app}; Flags: ignoreversion replacesameversion;
Source: ..\src\Vocup\bin\Release\Vocup.exe.config;                           DestDir: {app}; Flags: ignoreversion replacesameversion;
Source: ..\src\Vocup\bin\Release\Vocup.pdb;                                  DestDir: {app}; Flags: ignoreversion replacesameversion;

; Icons for file associations
Source: icon_vhf.ico;                 DestDir: {app}; Flags: ignoreversion replacesameversion;
Source: icon_vdp.ico;                 DestDir: {app}; Flags: ignoreversion replacesameversion;

[InstallDelete]
Type: files; Name: {app}\Hilfe.chm;
Type: files; Name: {app}\ICSharpCode.SharpZipLib.dll;
Type: files; Name: {app}\K_Updater.dll;
Type: files; Name: {app}\sound_correct.wav;
Type: files; Name: {app}\sound_wrong.wav;

[Icons]
Name: {commonprograms}\Vocup;         Filename: {app}\Vocup.exe;
Name: {commondesktop}\Vocup;          Filename: {app}\Vocup.exe; Tasks: desktopicon;

[Registry]

;Mit dieser Anweisung wird ein Registryschlüssel namens ".vhf" erzeugt
Root: HKCR; Subkey: ".vhf";                        ValueType: string; ValueName: ""; ValueData: "vhf.File";                   Flags: uninsdeletekey deletevalue;
;TypenSchlüssel erstellen
Root: HKCR; Subkey: "vhf.File";                    ValueType: string; ValueName: ""; ValueData: "Vokabelheft";                Flags: uninsdeletekey deletevalue;
;Icon Zuordnen
Root: HKCR; Subkey: "vhf.File\DefaultIcon";        ValueType: string; ValueName: ""; ValueData: "{app}\icon_vhf.ico";         Flags: uninsdeletekey deletevalue;
;Aktion beim Klicken festlegen
Root: HKCR; Subkey: "vhf.File\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\Vocup.exe"" ""%1"""; Flags: uninsdeletekey deletevalue;
;Beschreibung der Aktion festlegen
Root: HKCR; Subkey: "vhf.File\shell\open";         ValueType: string; ValueName: ""; ValueData: "Mit Vocup öffnen";           Flags: uninsdeletekey deletevalue;

;Mit dieser Anweisung wird ein Registryschlüssel namens ".vdp" erzeugt
Root: HKCR; Subkey: ".vdp";                        ValueType: string; ValueName: ""; ValueData: "vdp.File";                   Flags: uninsdeletekey deletevalue;
;TypenSchlüssel erstellen
Root: HKCR; Subkey: "vdp.File";                    ValueType: string; ValueName: ""; ValueData: "Vocup Datensicherung";       Flags: uninsdeletekey deletevalue;
;Icon Zuordnen
Root: HKCR; Subkey: "vdp.File\DefaultIcon";        ValueType: string; ValueName: ""; ValueData: "{app}\icon_vdp.ico";         Flags: uninsdeletekey deletevalue;
;Aktion beim Klicken festlegen
Root: HKCR; Subkey: "vdp.File\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\Vocup.exe"" ""%1"""; Flags: uninsdeletekey deletevalue;
;Beschreibung der Aktion festlegen
Root: HKCR; Subkey: "vdp.File\shell\open";         ValueType: string; ValueName: ""; ValueData: "Mit Vocup öffnen";           Flags: uninsdeletekey deletevalue;

[Run]
Filename: {app}\Vocup.exe; Description: {cm:LaunchProgram,Vocup}; Flags: nowait postinstall skipifsilent;

[CustomMessages]
NetFxRequired_Caption0=Vocup benötigt .NET 4.8 oder Mono
NetFxRequired_Caption1=
NetFxRequired_Caption2=Das Setup konnte Microsoft .NET Framework 4.8 nicht finden. Sie können diese Version über Windows Update installieren.
NetFxRequired_Caption3=
NetFxRequired_Caption4=Falls Sie Wine verwenden, stellen Sie sicher, dass Wine Mono installiert ist und fahren Sie mit der Installation fort.

[Code]
function IsNetFxInstalled(version: string; service: cardinal): boolean;
//
// See http://www.kynosarges.de/DotNetVersion.html and https://stackoverflow.com/questions/4104011/inno-setup-verify-that-net-4-0-is-installed
//
// Indicates whether the specified version and service pack of the .NET Framework is installed.
//
// version -- Specify one of these strings for the required .NET Framework version:
//    'v1.1'          .NET Framework 1.1
//    'v2.0'          .NET Framework 2.0
//    'v3.0'          .NET Framework 3.0
//    'v3.5'          .NET Framework 3.5
//    'v4\Client'     .NET Framework 4.0 Client Profile
//    'v4\Full'       .NET Framework 4.0 Full Installation
//    'v4.5'          .NET Framework 4.5
//    'v4.5.1'        .NET Framework 4.5.1
//    'v4.5.2'        .NET Framework 4.5.2
//    'v4.6'          .NET Framework 4.6
//    'v4.6.1'        .NET Framework 4.6.1
//    'v4.6.2'        .NET Framework 4.6.2
//    'v4.7'          .NET Framework 4.7
//    'v4.7.1'        .NET Framework 4.7.1
//    'v4.7.2'        .NET Framework 4.7.2
//    'v4.8'          .NET Framework 4.8
//
// service -- Specify any non-negative integer for the required service pack level:
//    0               No service packs required
//    1, 2, etc.      Service pack 1, 2, etc. required
var
    key, versionKey: string;
    install, release, serviceCount, versionRelease: cardinal;
    success: boolean;
begin
    versionKey := version;
    versionRelease := 0;

    // .NET 1.1 and 2.0 embed release number in version key
    if version = 'v1.1' then begin
        versionKey := 'v1.1.4322';
    end else if version = 'v2.0' then begin
        versionKey := 'v2.0.50727';
    end
    
    // .NET 4.5 and newer install as update to .NET 4.0 Full
    else if Pos('v4.', version) = 1 then begin
        versionKey := 'v4\Full';
        case version of
          'v4.5':   versionRelease := 378389;
          'v4.5.1': versionRelease := 378675; // 378758 on Windows 8 and older
          'v4.5.2': versionRelease := 379893;
          'v4.6':   versionRelease := 393295; // 393297 on Windows 8.1 and older
          'v4.6.1': versionRelease := 394254; // 394271 before Win10 November Update
          'v4.6.2': versionRelease := 394802; // 394806 before Win10 Anniversary Update
          'v4.7':   versionRelease := 460798; // 460805 before Win10 Creators Update
          'v4.7.1': versionRelease := 461308; // 461310 before Win10 Fall Creators Update
          'v4.7.2': versionRelease := 461808; // 461814 before Win10 April 2018 Update
          'v4.8':   versionRelease := 528040; // 528049 before Win10 May 2019 Update
        end;
    end;

    // installation key group for all .NET versions
    key := 'SOFTWARE\Microsoft\NET Framework Setup\NDP\' + versionKey;

    // .NET 3.0 uses value InstallSuccess in subkey Setup
    if Pos('v3.0', version) = 1 then begin
        success := RegQueryDWordValue(HKLM, key + '\Setup', 'InstallSuccess', install);
    end else begin
        success := RegQueryDWordValue(HKLM, key, 'Install', install);
    end;

    // .NET 4.0 and newer use value Servicing instead of SP
    if Pos('v4', version) = 1 then begin
        success := success and RegQueryDWordValue(HKLM, key, 'Servicing', serviceCount);
    end else begin
        success := success and RegQueryDWordValue(HKLM, key, 'SP', serviceCount);
    end;

    // .NET 4.5 and newer use additional value Release
    if versionRelease > 0 then begin
        success := success and RegQueryDWordValue(HKLM, key, 'Release', release);
        success := success and (release >= versionRelease);
    end;

    result := success and (install = 1) and (serviceCount >= service);
end;
   
function InitializeSetup(): boolean;
begin
    if not IsNetFxInstalled('v4.8', 0) then begin
        MsgBox(
            ExpandConstant('{cm:NetFxRequired_Caption0}') + #13 +
            ExpandConstant('{cm:NetFxRequired_Caption1}') + #13 +
            ExpandConstant('{cm:NetFxRequired_Caption2}') + #13 +
            ExpandConstant('{cm:NetFxRequired_Caption3}') + #13 +
            ExpandConstant('{cm:NetFxRequired_Caption4}'),
            mbError,
            MB_OK);
    end;
    
    Result := true;
end;